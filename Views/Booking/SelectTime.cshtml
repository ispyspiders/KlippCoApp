@model BookingViewModel

@{
    ViewData["Title"] = "Boka";
}

<div class="banner d-flex justify-content-center align-items-center">
    <div class="container">
        <img src="~/images/Klipp&Co.svg" alt="Logo" class="img-fluid">
        <h1 class="h1 mt-4 text-light">@ViewData["Title"]</h1>
    </div>
</div>

<div class="container">
    <form asp-action="SelectTime" method="post" class="mt-4 bg-light rounded p-4">
        <h2>3. Välj tid</h2>

        <div class="d-flex flex-row-sm">
            <p id="selectedServiceDisplay" class="me-4">Tjänst: @ViewBag.Service?.Name</p>
            <p id="selectedStylistDisplay" class="me-4"></p>
            <p id="selectedTimeDisplay"></p>
        </div>

        <div class="progress mb-3">
            <div class="progress-bar bg-success" role="progressbar" style="width: 75%" aria-valuenow="75"
                aria-valuemin="0" aria-valuemax="100"></div>
        </div>


        <!-- FullCalendar container -->
        <div id="calendar"></div>


        <!-- Hidden fields för att lagra selected time, service, och stylist information -->
        <input type="hidden" name="serviceId" value="@ViewBag.Service.Id" />
        <input type="hidden" name="serviceName" value="@ViewBag.Service?.Name" />
        <input type="hidden" name="stylistId" id="selectedStylistId" />
        <input type="hidden" name="bookingTime" id="selectedBookingTime" />

        <div class="form-group mt-4">
            <a asp-action="SelectStylist" asp-route-serviceId="@ViewBag.ServiceId"
                class="btn btn-secondary me-2">
                Tillbaka
            </a>
            <button type="submit" class="btn btn-primary" id="confirmBookingBtn" disabled>Granska bokning</button>
        </div>
    </form>
</div>

@section Scripts {
    <!-- Ladda FullCalendar -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar')
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Events)),
                eventColor: '#395954',
                eventBackgroundColor: '#395954',
                eventDisplay: 'block',
                displayEventEnd: true,
                headerToolbar: { start: 'prev,next today', center: 'title', end: 'dayGridMonth,timeGridWeek' },
                locale: 'sv',
                firstDay: 1,
                eventClick: function (info) {
                    let event = info.event;
                    let stylistId = event.extendedProps.stylistId;
                    let stylistName = event.extendedProps.stylistName;

                    @* Spara tid och stylistId till formuläret *@
                        document.getElementById('selectedBookingTime').value = moment(event.start).toISOString();
                    document.getElementById('selectedStylistId').value = stylistId;

                    @* Visa vald tid och stylist *@
                        const selectedTime = moment(event.start).format('YYYY-MM-DD HH:mm');
                    document.getElementById('selectedTimeDisplay').textContent = "Vald tid: " + selectedTime;
                    document.getElementById('selectedStylistDisplay').textContent = "Stylist: " + stylistName;

                    // Avmarkera tidigare event
                    calendar.getEvents().forEach(ev => {
                        ev.setExtendedProp('selected', false);
                        ev.setProp('backgroundColor', '#395954');
                        ev.setProp('borderColor', '#395954');
                    });

                    // Markera valt event
                    event.setExtendedProp('selected', true);
                    info.el.classList.add('selected-event');
                    event.setProp('backgroundColor', '#eb6817');
                    event.setProp('borderColor', '#eb6817');

                    updateConfirmButtonState();
                }

            })
            calendar.render()
        })

        function updateConfirmButtonState() {
            const stylistId = document.getElementById("selectedStylistId").value;
            const bookingTime = document.getElementById("selectedBookingTime").value;
            const btn = document.getElementById("confirmBookingBtn");

            if (stylistId && bookingTime) btn.disabled = false;
            else btn.disabled = true;
        }

    </script>
}